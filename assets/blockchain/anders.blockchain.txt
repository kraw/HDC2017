=== SHA256 Hash

- Looks like a bunch of random numbers
- Fingerprint of digital data

* Anders == Hash Change
* Starts with ___
* Change
* Still starts with ___

- Simple data
- Library of Congress
- This many characters

- Extend hash idea to a "block"

=== Block

- Hash broken out into three sections

* Block is just some kind of number
* Nonce, another number (more later)
* Some data, just as before
* Hash begins with ___
* Call this block "signed"

* Change data means changed hash
* Probability that it will begin with ___
* Change data field
* This block is not signed
* Enter the "nonce"

- A number you can set to get back to starting with ___

* Not "1". Not "2". Not "3" ...
* "Mine" increments nonce until begins with ___

- A "blockchain" is a chain of these blocks
- How do we put them together

=== Blockchain

* Introduce new "previous" field
* Blocks are numbered 1, 2, 3, ...
* Previous on block #5 begins with ___
* That is the value in block #4 hash
* Each block points backwards
* Block #1 has no previous, so just 0

* Change block #5 data
* Invalidates as expected
* Return to valid value
* Change block #4 changes hash
* Breaks (invalidates) block #5
* Change on block #3 break 4, 5

* Change block #5
* Mine nonce
* Validated block
* Change block #3
* Means getting new nonce for #3
* Block #4 is still broken
* Have to mine block #4
* Block #5

- Changing last block means mining just that block
- The further in the past we go, the harder it is to change
- Blockchain resists "mutation" or change
- How do we know that the chain has been "re-mined"

=== Distributed

* Same as last blockchain
* Adding additional peers

- There are many blockchain peers in a network
- Each with a complete copy of the blockchain

* Peer A, Block #5 starts with ___
* Peer B, Block #5 starts with same

- They must be identical

* Change Peer A, Block #4
* Mine Block #5 to validate
* Peer A, Block #5 hash starts with ___
* Peer C, Block #5 hash starts with ___
* Peer B, Block #5 hash is different

- Single hash value tells you the chain is different
- More peers have starts with ___ so they win
- Can very quickly identify if anything has been altered

- That's it! But not very useful
- What we really want is a token

=== Tokens

- Data becomes "transaction" list
- Does not matter how many transactions

* All peers have the same values
* Change Peer A, Block 4
* Block 5 becomes invalidated
* The other peers would notice

- Immutability

- Note that transaction is only a single movement
- Not complete account balance, how much a person has

* Does Darcy have $25

=== Coinbase

* Block #1, invent $100 and give it to Anders
* Block #2, invent another $100
* I am the one with money right now
* Then more transactions start taking place

* In Block #5 does Jackson have $2 to give?
* In Block #4 Emily gave Jackson $10
* Can trace the money backwards
* The value of the "previous"

* Change Peer A, Block 4 

- Resists tampering
- Small and transaction
- Efficient way to handle agreement on what has happened in the past
